#In this project, data from multiple tables are being queried to gather data about customers and their orders. 
#The data contains inconsistencies in formatting, leading to invalid order ids. Questions about orders placed will have extra WHHERE clauses to filter out these records.

#1. How many orders were placed in January?

SELECT COUNT(*) 
    FROM BIT_DB.JanSales
    WHERE length(orderID) = 6
    AND orderID <> 'Order ID';

#2. How many of those orders were for an iPhone?

SELECT COUNT(*) 
    FROM BIT_DB.JanSales
    WHERE Product = 'iPhone'
    AND length(orderID) = 6
    AND orderID <> 'Order ID';

#3. Select the customer account numbers for all the orders that were placed in February.

SELECT DISTINCT cus.acctnum
    FROM BIT_DB.customers cus
    JOIN BIT_DB.FebSales feb
        ON cus.order_id = feb.orderID
    WHERE length(orderID) = 6
    AND orderID <> 'Order ID'

#4. Which product was the cheapest one sold in January, and what was the price?

SELECT DISTINCT product, price
    FROM BIT_DB.JanSales
    ORDER BY price ASC Limit 1

#5.What is the total revenue for each product sold in January? (Revenue can be calculated using the number of products sold and the price of the products).

SELECT Product, SUM(quantity)*price as revenue
    FROM BIT_DB.JanSales
    GROUP BY product

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT Product, SUM(Quantity), SUM(quantity)*price as revenue
    FROM BIT_DB.FebSales
    WHERE location = '548 Lincoln St, Seattle, WA 98101'
    GROUP BY product

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?

Select COUNT(DISTINCT cus.acctnum), AVG(feb.Quantity)*price
    FROM BIT_DB.customers cus
    JOIN BIT_DB.FebSales feb
    ON cus.order_id = feb.orderID
    WHERE feb.Quantity > 2 
    AND length(orderID) = 6
    AND orderID <> 'Order ID'
   
